name: app 
services:

  rest_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rest_api
    env_file: .env
    command: /my-app/prestart.sh
    volumes:
      - ./app:/my-app/app
      - ./uploads:/my-app/uploads
      - ./processed:/my-app/processed
      - ./assets:/my-app/assets
      - ./collections:/my-app/collections:ro
      - ./tests:/my-app/tests
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/api/health | grep -q '\"status\": \"ok\"'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  nginx:
      image: nginx:alpine
      container_name: app_nginx
      ports: ["80:80"]
      volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./processed:/usr/share/nginx/html/processed:ro
      - ./uploads:/usr/share/nginx/html/uploads:ro
      depends_on: [ rest_api]
      restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - rest_api
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped


  node_exporter:
    image: prom/node-exporter:v1.8.1
    container_name: node_exporter
    ports:
      - "9100:9100"
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.rootfs=/rootfs'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(rootfs|host|proc|sys|dev|run|var/lib/docker/.+)($$|/)'
      - '--collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|nsfs|overlay|proc|procfs|pstore|securityfs|sysfs|tracefs|squashfs)$$'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    ports:
      - "8085:8080"
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true

volumes: 
  prometheus_data: 
  grafana_data: 