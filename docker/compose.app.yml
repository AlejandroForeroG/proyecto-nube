name: app 
services:

  rest_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rest_api
    env_file: .env
    command: /my-app/prestart.sh
    volumes:
      - ./app:/my-app/app
      - ./uploads:/my-app/uploads
      - ./processed:/my-app/processed
      - ./assets:/my-app/assets
      - ./collections:/my-app/collections:ro
      - ./tests:/my-app/tests
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/health | grep -q '\"status\": \"ok\"'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  nginx:
      image: nginx:alpine
      container_name: app_nginx
      ports: ["80:80"]
      volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./processed:/usr/share/nginx/html/processed:ro
      - ./uploads:/usr/share/nginx/html/uploads:ro
      depends_on: [ rest_api]
      restart: unless-stopped


  redis:
      image: redis:7-alpine
      container_name: app_redis
      ports:
        - "6379:6379"
      restart: unless-stopped
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5

  celery_worker:
      build: { context: ., dockerfile: Dockerfile }
      container_name: celery_worker
      env_file: .env
      command: celery -A app.celery_worker.celery_app worker --loglevel=info --concurrency=1 --prefetch-multiplier=1
      volumes:
        - ./app:/my-app/app
        - ./uploads:/my-app/uploads
        - ./processed:/my-app/processed
        - ./assets:/my-app/assets
      depends_on:
        redis: { condition: service_healthy }
      restart: unless-stopped

volumes:
  postgres_data: 